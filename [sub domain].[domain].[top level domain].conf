# Author: Pietro Malky
# Date: 09/13/2020
# Purpose: Template NGINX config file for easy HTTPS and proxy-pass configuration

server {
    # ======== REQUIRED: Listen on port 80 (default) for HTTP ========
    listen 80;
    listen [::]:80;

    # ======== REQUIRED: Add domain name associated with your HTTP configuration ========
    server_name _SUBDOMAIN_._DOMAIN_._TOPLEVELDOMAIN_;
    
    return 301 https://$host$request_uri;
}

server {
    # ======== REQUIRED: Listen on port 443 (default) for HTTPS ========
    listen 443 ssl http2;
    listen [::]:443 ssl http2;


    # ======== REQUIRED: Add domain name associated with your HTTPS configuration ========
    server_name _SUBDOMAIN_._DOMAIN_._TOPLEVELDOMAIN_;
    root _STATICFILEDIRECTORY_;


    # ======== REQUIRED: Fully qualified paths for certificate and private key ========
    ssl_certificate /etc/letsencrypt/live/_SUBDOMAIN_._DOMAIN_._TOPLEVELDOMAIN_/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/_SUBDOMAIN_._DOMAIN_._TOPLEVELDOMAIN_/privkey.pem;

    
    # ======== From Mozilla: session timeout and cache ========
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;


    # ======== From Mozilla: modern configuration ========
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers off;


    # ======== From Mozilla: HSTS (ngx_http_headers_module is required) (63072000 seconds) ========
    add_header Strict-Transport-Security "max-age=63072000" always;


    # ======== REQUIRED: Google DNS Resolver IP Address ========
    resolver 8.8.8.8;


    # ======== From Mozilla: traffic redirection portion ========
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;


    # ======== OPTIONAL: put API proxy passes here ========
    # First block: proxy-pass for any web-socket connections modify endpoint url as needed.
    # Second block: proxy-pass for any web API connections. modify endpoint url as needed. 
    # un-comment the following blocks to enable proxying WebSocket connections

    # location /socket.io/ {
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
        
    #     proxy_pass "http://localhost:8080/socket.io/";
    # }

    # location /api/ {
    #     proxy_pass "http://localhost:8080/"; # location of your local backend server (e.g. Python Flask, NodeJS Express, etc.)
    # }
}
